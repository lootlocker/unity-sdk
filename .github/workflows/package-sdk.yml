name: Package SDK
run-name: package-sdk
on:
  push:
    branches: # Made towards the following
      - main
      - dev
    tags:
      - v**
  workflow_dispatch: {}

jobs:
  package-sdk:
    name: Package SDK
    runs-on: [ubuntu-latest]
    #runs-on: [k8s]
    #container:
    #  image: ubuntu-latest
    env: 
      LL_USE_STAGE: false
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.4.40f1
          - 2020.3.48f1
          - 2021.3.32f1
          - 2022.3.14f1
          - 2023.2.1f1
    steps:
      - name: Setup commandline dependencies (if on self-hosted runner)
        if: ${{ env.LL_USE_STAGE == 'true' }}
        run: |
          apt update
          apt-get install -y git
          git config --global --add safe.directory unity-sdk
          git config --global --add safe.directory unity-sdk-packager
          apt-get install -y jq
          apt-get install -y sed
          apt-get install -y docker
          apt-get install -y curl
          apt-get update
          apt-get install ca-certificates curl gnupg
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Checkout unity-sdk repository
        uses: actions/checkout@v3
        with:
          path: unity-sdk
      - name: Checkout unity-sdk-packager-project repository
        uses: actions/checkout@v3
        with:
          repository: lootlocker/unity-sdk-packager
          path: unity-sdk-packager
          token: ${{ SECRETS.LL_PERSONAL_ACCESS_TOKEN }}
      - name: Add LootLockerSDK as asset folder
        run: |
          cp -r unity-sdk unity-sdk-packager/Assets/LootLockerSDK
      - uses: actions/cache@v3
        with:
          path: unity-sdk-packager/Library
          key: ${{ matrix.targetPlatform }}-Library-unity-sdk-packager
          restore-keys: |
            ${{ matrix.targetPlatform }}-Library-unity-sdk-packager
            Library-
      - name: Package SDK for ${{ matrix.unityVersion }}
        id: package-sdk-gameci
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ SECRETS.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ SECRETS.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ SECRETS.UNITY_PASSWORD }}
        with:
          testMode: playmode
          checkName: ${{ matrix.unityVersion }} Test Results
          artifactsPath: package-sdk-gameci-${{ matrix.unityVersion }}-artifacts
          projectPath: unity-sdk-packager
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ SECRETS.GITHUB_TOKEN }}
      - name: Expose packaged SDK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: LootLockerSDK-${{ matrix.unityVersion }}.zip
          path: unity-sdk-packager/LootLockerSDK*.unitypackage